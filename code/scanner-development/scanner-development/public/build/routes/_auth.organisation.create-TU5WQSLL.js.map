{
  "version": 3,
  "sources": ["../../../app/routes/_auth.organisation.create.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_auth.organisation.create.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_auth.organisation.create.tsx\");\n  import.meta.hot.lastModified = \"1701622151084.577\";\n}\n// REMIX HMR END\n\n/** @format */\n\nimport { Input } from '~/components/Form/Input';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { createOrganistionSchema } from '~/utils/schema';\nexport default function Create() {\n  _s();\n  const {\n    register,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(createOrganistionSchema)\n  });\n  return <div className='mt-10'>\r\n\t\t\t<h2 className=\"font-bold text-2xl py-4 underline\">Create Organisation</h2>\r\n\t\t\t<div className='flex flex-col bg-white py-8 px-4 mb-8'>\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className='grid grid-cols-1 md:grid-cols-4 gap-x-4 gap-y-8 mb-6'>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t<Input name='organisation' placeholder='Organisation' error={errors} required={true} id={'organisation'} type='text' register={register} />\r\n\t\t\t\t\t\t\t<Input name='phone' placeholder='Phone' id={'phone'} error={errors} required={true} type='text' register={register} />\r\n\t\t\t\t\t\t\t<Input name='mobile' placeholder='Mobile' id={'mobile'} error={errors} required={true} type='text' register={register} />\r\n\t\t\t\t\t\t\t<Input name='email' placeholder='E-mail' id={'email'} error={errors} required={true} type='text'\n            // register={register}\n            />\r\n\r\n\t\t\t\t\t\t\t{/* <Select\r\n        name='category'\r\n        placeholder='Category'\r\n        id='category'\r\n        type='text'\r\n        options={[]}\r\n        register={register}\r\n        /> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='grid grid-cols-1 md:grid-cols-4 gap-x-4 gap-y-4 mb-6'>\r\n\t\t\t\t\t\t\t{/* <Input\r\n        type='text'\r\n        register={register}\r\n        error={errors}\r\n        id={'hc'}\r\n        required={true}\r\n        name='hc'\r\n        placeholder='HC'\r\n        /> */}\r\n\t\t\t\t\t\t\t<Input name='street1' placeholder='Street1' error={errors} required={true} id={'street1'} type='text' register={register} />\r\n\t\t\t\t\t\t\t<Input name='street2' placeholder='Street2' id={'street2'} error={errors} required={true} type='text' register={register} />\r\n\t\t\t\t\t\t\t<Input name='city' placeholder='City' id={'city'} error={errors} required={true} type='text' register={register} />\r\n\t\t\t\t\t\t\t<Input name='provState' placeholder='Prov State' id={'provState'} error={errors} required={true} type='text'\n            // register={register}\n            />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className='bg-blue-500 py-2 text-base text-white w-[10%] float-right my-4 rounded-lg'>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>;\n}\n_s(Create, \"h+wugaAnoWXgMQ26wPhfgpgmSzQ=\", false, function () {\n  return [useForm];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAuCG;AAtCH,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qDAAuD,EAAE;AAAA,EAClG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4C;AAC5C,cAAY,IAAI,eAAe;AACjC;AASe,SAAR,SAA0B;AAC/B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA,WAAW;AAAA,MACT;AAAA,IACF;AAAA,EACF,IAAI,QAAQ;AAAA,IACV,MAAM;AAAA,IACN,UAAU,EAAY,uBAAuB;AAAA,EAC/C,CAAC;AACD,SAAO,mDAAC,SAAI,WAAU,SACrB;AAAA,uDAAC,QAAG,WAAU,qCAAoC,mCAAlD;AAAA;AAAA;AAAA;AAAA,WAAqE;AAAA,IACrE,mDAAC,SAAI,WAAU,yCAGd,6DAAC,UACA;AAAA,yDAAC,SACA;AAAA,2DAAC,SAAI,WAAU,wDAEd;AAAA,6DAAC,SAAM,MAAK,gBAAe,aAAY,gBAAe,OAAO,QAAQ,UAAU,MAAM,IAAI,gBAAgB,MAAK,QAAO,YAArH;AAAA;AAAA;AAAA;AAAA,iBAAyI;AAAA,UACzI,mDAAC,SAAM,MAAK,SAAQ,aAAY,SAAQ,IAAI,SAAS,OAAO,QAAQ,UAAU,MAAM,MAAK,QAAO,YAAhG;AAAA;AAAA;AAAA;AAAA,iBAAoH;AAAA,UACpH,mDAAC,SAAM,MAAK,UAAS,aAAY,UAAS,IAAI,UAAU,OAAO,QAAQ,UAAU,MAAM,MAAK,QAAO,YAAnG;AAAA;AAAA;AAAA;AAAA,iBAAuH;AAAA,UACvH;AAAA,YAAC;AAAA;AAAA,cAAM,MAAK;AAAA,cAAQ,aAAY;AAAA,cAAS,IAAI;AAAA,cAAS,OAAO;AAAA,cAAQ,UAAU;AAAA,cAAM,MAAK;AAAA;AAAA,YAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEK;AAAA,aAPN;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,QACA,mDAAC,SAAI,WAAU,wDAUd;AAAA,6DAAC,SAAM,MAAK,WAAU,aAAY,WAAU,OAAO,QAAQ,UAAU,MAAM,IAAI,WAAW,MAAK,QAAO,YAAtG;AAAA;AAAA;AAAA;AAAA,iBAA0H;AAAA,UAC1H,mDAAC,SAAM,MAAK,WAAU,aAAY,WAAU,IAAI,WAAW,OAAO,QAAQ,UAAU,MAAM,MAAK,QAAO,YAAtG;AAAA;AAAA;AAAA;AAAA,iBAA0H;AAAA,UAC1H,mDAAC,SAAM,MAAK,QAAO,aAAY,QAAO,IAAI,QAAQ,OAAO,QAAQ,UAAU,MAAM,MAAK,QAAO,YAA7F;AAAA;AAAA;AAAA;AAAA,iBAAiH;AAAA,UACjH;AAAA,YAAC;AAAA;AAAA,cAAM,MAAK;AAAA,cAAY,aAAY;AAAA,cAAa,IAAI;AAAA,cAAa,OAAO;AAAA,cAAQ,UAAU;AAAA,cAAM,MAAK;AAAA;AAAA,YAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEK;AAAA,aAfN;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA,WAnCD;AAAA;AAAA;AAAA;AAAA,aAsCA;AAAA,MACA,mDAAC,YAAO,WAAU,6EAA4E,sBAA9F;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SA1CD;AAAA;AAAA;AAAA;AAAA,WA2CA,KA9CD;AAAA;AAAA;AAAA;AAAA,WA+CA;AAAA,OAjDM;AAAA;AAAA;AAAA;AAAA,SAkDP;AACF;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,OAAO;AACjB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
